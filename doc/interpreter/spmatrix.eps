%!PS-Adobe-2.0 EPSF-2.0
%%Title: spmatrix.eps
%%Creator: gnuplot 4.6 patchlevel 5
%%CreationDate: Wed Aug  6 15:17:29 2014
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following true/false flags may be edited by hand if desired.
% The unit line width and grayscale image gamma correction may also be changed.
%
/Color false def
/Blacktext false def
/Solid false def
/Dashlength 2 def
/Landscape false def
/Level1 false def
/Rounded false def
/ClipToBoundingBox false def
/SuppressPDFMark false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/Gamma 1.0 def
/BackgroundColor {-1.000 -1.000 -1.000} def
%
/vshift -66 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/doclip {
  ClipToBoundingBox {
    newpath 50 50 moveto 410 50 lineto 410 302 lineto 50 302 lineto closepath
    clip
  } if
} def
%
% Gnuplot Prolog Version 4.6 (September 2012)
%
%/SuppressPDFMark true def
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/g {setgray} bind def
/Gshow {show} def   % May be redefined later in the file to support UTF-8
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
3.8 setmiterlimit
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
  clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {Gshow} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     show 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} def
/Gswidth {dup type /stringtype eq {stringwidth} {pop (n) stringwidth} ifelse} def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get Gswidth pop add} {pop} ifelse} ifelse} forall} def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
Level1 SuppressPDFMark or 
{} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (spmatrix.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.6 patchlevel 5)
  /Author (jwe)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Wed Aug  6 15:17:29 2014)
  /DOCINFO pdfmark
end
} ifelse
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
doclip
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 200 scalefont setfont
BackgroundColor 0 lt 3 1 roll 0 lt exch 0 lt or or not {BackgroundColor C 1.000 0 0 7200.00 5040.00 BoxColFill} if
gsave % colour palette begin
/maxcolors 64 def
/HSV2RGB {  exch dup 0.0 eq {pop exch pop dup dup} % achromatic gray
  { /HSVs exch def /HSVv exch def 6.0 mul dup floor dup 3 1 roll sub
     /HSVf exch def /HSVi exch cvi def /HSVp HSVv 1.0 HSVs sub mul def
	 /HSVq HSVv 1.0 HSVs HSVf mul sub mul def 
	 /HSVt HSVv 1.0 HSVs 1.0 HSVf sub mul sub mul def
	 /HSVi HSVi 6 mod def 0 HSVi eq {HSVv HSVt HSVp}
	 {1 HSVi eq {HSVq HSVv HSVp}{2 HSVi eq {HSVp HSVv HSVt}
	 {3 HSVi eq {HSVp HSVq HSVv}{4 HSVi eq {HSVt HSVp HSVv}
	 {HSVv HSVp HSVq} ifelse} ifelse} ifelse} ifelse} ifelse
  } ifelse} def
/Constrain {
  dup 0 lt {0 exch pop}{dup 1 gt {1 exch pop} if} ifelse} def
/YIQ2RGB {
  3 copy -1.702 mul exch -1.105 mul add add Constrain 4 1 roll
  3 copy -0.647 mul exch -0.272 mul add add Constrain 5 1 roll
  0.621 mul exch -0.956 mul add add Constrain 3 1 roll } def
/CMY2RGB {  1 exch sub exch 1 exch sub 3 2 roll 1 exch sub 3 1 roll exch } def
/XYZ2RGB {  3 copy -0.9017 mul exch -0.1187 mul add exch 0.0585 mul exch add
  Constrain 4 1 roll 3 copy -0.0279 mul exch 1.999 mul add exch
  -0.9844 mul add Constrain 5 1 roll -0.2891 mul exch -0.5338 mul add
  exch 1.91 mul exch add Constrain 3 1 roll} def
/SelectSpace {ColorSpace (HSV) eq {HSV2RGB}{ColorSpace (XYZ) eq {
  XYZ2RGB}{ColorSpace (CMY) eq {CMY2RGB}{ColorSpace (YIQ) eq {YIQ2RGB}
  if} ifelse} ifelse} ifelse} def
/InterpolatedColor true def
/grayindex {/gidx 0 def
  {GrayA gidx get grayv ge {exit} if /gidx gidx 1 add def} loop} def
/dgdx {grayv GrayA gidx get sub GrayA gidx 1 sub get
  GrayA gidx get sub div} def 
/redvalue {RedA gidx get RedA gidx 1 sub get
  RedA gidx get sub dgdxval mul add} def
/greenvalue {GreenA gidx get GreenA gidx 1 sub get
  GreenA gidx get sub dgdxval mul add} def
/bluevalue {BlueA gidx get BlueA gidx 1 sub get
  BlueA gidx get sub dgdxval mul add} def
/interpolate {
  grayindex grayv GrayA gidx get sub abs 1e-5 le
    {RedA gidx get GreenA gidx get BlueA gidx get}
    {/dgdxval dgdx def redvalue greenvalue bluevalue} ifelse} def
/GrayA [0 .0159 .0317 .0476 .0635 .0794 .0952 .1111 .127 .1429 .1587 .1746 
  .1905 .2063 .2222 .2381 .254 .2698 .2857 .3016 .3175 .3333 .3492 .3651 
  .381 .3968 .4127 .4286 .4444 .4603 .4762 .4921 .5079 .5238 .5397 .5556 
  .5714 .5873 .6032 .619 .6349 .6508 .6667 .6825 .6984 .7143 .7302 .746 
  .7619 .7778 .7937 .8095 .8254 .8413 .8571 .873 .8889 .9048 .9206 .9365 
  .9524 .9683 .9841 1 ] def
/RedA [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 .0238 .0873 .1508 
  .2143 .2778 .3413 .4048 .4683 .5317 .5952 .6587 .7222 .7857 .8492 .9127 
  .9762 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 .9444 .881 .8175 .754 .6905 .627 
  .5635 .5 ] def
/GreenA [0 0 0 0 0 0 0 0 .0079 .0714 .1349 .1984 .2619 .3254 .3889 .4524 
  .5159 .5794 .6429 .7063 .7698 .8333 .8968 .9603 1 1 1 1 1 1 1 1 1 1 1 1 1 
  1 1 1 .9603 .8968 .8333 .7698 .7063 .6429 .5794 .5159 .4524 .3889 .3254 
  .2619 .1984 .1349 .0714 .0079 0 0 0 0 0 0 0 0 ] def
/BlueA [.5 .5635 .627 .6905 .754 .8175 .881 .9444 1 1 1 1 1 1 1 1 1 1 1 1 1 
  1 1 1 .9762 .9127 .8492 .7857 .7222 .6587 .5952 .5317 .4683 .4048 .3413 
  .2778 .2143 .1508 .0873 .0238 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
  0 0 ] def
/pm3dround {maxcolors 0 gt {dup 1 ge
	{pop 1} {maxcolors mul floor maxcolors 1 sub div} ifelse} if} def
/pm3dGamma 1.0 1.5 Gamma mul div def
/ColorSpace (RGB) def
Color InterpolatedColor or { % COLOUR vs. GRAY map
  InterpolatedColor { %% Interpolation vs. RGB-Formula
    /g {stroke pm3dround /grayv exch def interpolate
        SelectSpace setrgbcolor} bind def
  }{
  /g {stroke pm3dround dup cF7 Constrain exch dup cF5 Constrain exch cF15 Constrain 
       SelectSpace setrgbcolor} bind def
  } ifelse
}{
  /g {stroke pm3dround pm3dGamma exp setgray} bind def
} ifelse
1.000 UL
LTb
1.00 1.00 1.00 C 1.000 660 400 6178 4398 BoxColFill
LCb setrgbcolor
660 400 M
0 4398 V
6178 0 V
0 -4398 V
660 400 L
stroke
0.500 UL
LTb
660 4799 M
88 0 V
6091 0 R
-88 0 V
stroke
0.00 0.00 0.00 C 540 4799 M
[ [({}) 200.0 0.0 true true 0 (0)]
] -66.7 MRshow
0.500 UL
LTb
660 3705 M
88 0 V
6091 0 R
-88 0 V
stroke
0.00 0.00 0.00 C 540 3705 M
[ [({}) 200.0 0.0 true true 0 (50)]
] -66.7 MRshow
0.500 UL
LTb
660 2610 M
88 0 V
6091 0 R
-88 0 V
stroke
0.00 0.00 0.00 C 540 2610 M
[ [({}) 200.0 0.0 true true 0 (100)]
] -66.7 MRshow
0.500 UL
LTb
660 1516 M
88 0 V
6091 0 R
-88 0 V
stroke
0.00 0.00 0.00 C 540 1516 M
[ [({}) 200.0 0.0 true true 0 (150)]
] -66.7 MRshow
0.500 UL
LTb
660 422 M
88 0 V
6091 0 R
-88 0 V
stroke
0.00 0.00 0.00 C 540 422 M
[ [({}) 200.0 0.0 true true 0 (200)]
] -66.7 MRshow
0.500 UL
LTb
660 400 M
0 88 V
0 4311 R
0 -88 V
stroke
0.00 0.00 0.00 C 660 200 M
[ [({}) 200.0 0.0 true true 0 (0)]
] -66.7 MCshow
0.500 UL
LTb
2197 400 M
0 88 V
0 4311 R
0 -88 V
stroke
0.00 0.00 0.00 C 2197 200 M
[ [({}) 200.0 0.0 true true 0 (50)]
] -66.7 MCshow
0.500 UL
LTb
3734 400 M
0 88 V
0 4311 R
0 -88 V
stroke
0.00 0.00 0.00 C 3734 200 M
[ [({}) 200.0 0.0 true true 0 (100)]
] -66.7 MCshow
0.500 UL
LTb
5271 400 M
0 88 V
0 4311 R
0 -88 V
stroke
0.00 0.00 0.00 C 5271 200 M
[ [({}) 200.0 0.0 true true 0 (150)]
] -66.7 MCshow
0.500 UL
LTb
6808 400 M
0 88 V
0 4311 R
0 -88 V
stroke
0.00 0.00 0.00 C 6808 200 M
[ [({}) 200.0 0.0 true true 0 (200)]
] -66.7 MCshow
0.500 UL
LTb
0.500 UL
LTb
660 4799 N
660 400 L
6179 0 V
0 4399 V
-6179 0 V
Z stroke
1.000 UP
0.500 UL
LTb
% Begin plot #1
2.000 UP
0.500 UL
LT0
0.00 0.00 1.00 C 691 4777 Star
691 4755 Star
721 4777 Star
721 4755 Star
721 4733 Star
721 4711 Star
752 4755 Star
752 4733 Star
752 4690 Star
752 4668 Star
783 4755 Star
783 4711 Star
783 4646 Star
783 4624 Star
814 4733 Star
814 4690 Star
814 4602 Star
814 4580 Star
844 4733 Star
844 4668 Star
844 4558 Star
844 4536 Star
875 4711 Star
875 4646 Star
875 4514 Star
875 4493 Star
906 4711 Star
906 4624 Star
906 4471 Star
906 4449 Star
937 4690 Star
937 4602 Star
937 4427 Star
937 4405 Star
967 4690 Star
967 4580 Star
967 4383 Star
967 4361 Star
998 4668 Star
998 4558 Star
998 4339 Star
998 4318 Star
1029 4668 Star
1029 4536 Star
1029 4296 Star
1029 4274 Star
1060 4646 Star
1060 4514 Star
1060 4252 Star
1060 4230 Star
1090 4646 Star
1090 4493 Star
1090 4208 Star
1090 4186 Star
1121 4624 Star
1121 4471 Star
1121 4164 Star
1121 4142 Star
1152 4624 Star
1152 4449 Star
1152 4121 Star
1152 4099 Star
1183 4602 Star
1183 4427 Star
1183 4077 Star
1183 4055 Star
1213 4602 Star
1213 4405 Star
1213 4033 Star
1213 4011 Star
1244 4580 Star
1244 4383 Star
1244 3989 Star
1244 3967 Star
1275 4580 Star
1275 4361 Star
1275 3945 Star
1275 3924 Star
1306 4558 Star
1306 4339 Star
1306 3902 Star
1306 3880 Star
1336 4558 Star
1336 4318 Star
1336 3858 Star
1336 3836 Star
1367 4536 Star
1367 4296 Star
1367 3814 Star
1367 3792 Star
1398 4536 Star
1398 4274 Star
1398 3770 Star
1398 3748 Star
1429 4514 Star
1429 4252 Star
1429 3727 Star
1429 3705 Star
1459 4514 Star
1459 4230 Star
1459 3683 Star
1459 3661 Star
1490 4493 Star
1490 4208 Star
1490 3639 Star
1490 3617 Star
1521 4493 Star
1521 4186 Star
1521 3595 Star
1521 3573 Star
1551 4471 Star
1551 4164 Star
1551 3552 Star
1551 3530 Star
1582 4471 Star
1582 4142 Star
1582 3508 Star
1582 3486 Star
1613 4449 Star
1613 4121 Star
1613 3464 Star
1613 3442 Star
1644 4449 Star
1644 4099 Star
1644 3420 Star
1644 3398 Star
1674 4427 Star
1674 4077 Star
1674 3376 Star
1674 3355 Star
1705 4427 Star
1705 4055 Star
1705 3333 Star
1705 3311 Star
1736 4405 Star
1736 4033 Star
1736 3289 Star
1736 3267 Star
1767 4405 Star
1767 4011 Star
1767 3245 Star
1767 3223 Star
1797 4383 Star
1797 3989 Star
1797 3201 Star
1797 3179 Star
1828 4383 Star
1828 3967 Star
1828 3158 Star
1828 3136 Star
1859 4361 Star
1859 3945 Star
1859 3114 Star
1859 3092 Star
1890 4361 Star
1890 3924 Star
1890 3070 Star
1890 3048 Star
1920 4339 Star
1920 3902 Star
1920 3026 Star
1920 3004 Star
1951 4339 Star
1951 3880 Star
1951 2982 Star
1951 2961 Star
1982 4318 Star
1982 3858 Star
1982 2939 Star
1982 2917 Star
2013 4318 Star
2013 3836 Star
2013 2895 Star
2013 2873 Star
2043 4296 Star
2043 3814 Star
2043 2851 Star
2043 2829 Star
2074 4296 Star
2074 3792 Star
2074 2807 Star
2074 2786 Star
2105 4274 Star
2105 3770 Star
2105 2764 Star
2105 2742 Star
2136 4274 Star
2136 3748 Star
2136 2720 Star
2136 2698 Star
2166 4252 Star
2166 3727 Star
2166 2676 Star
2166 2654 Star
2197 4252 Star
2197 3705 Star
2197 2632 Star
2197 2610 Star
2228 4230 Star
2228 3683 Star
2228 2589 Star
2228 2567 Star
2259 4230 Star
2259 3661 Star
2259 2545 Star
2259 2523 Star
2289 4208 Star
2289 3639 Star
2289 2501 Star
2289 2479 Star
2320 4208 Star
2320 3617 Star
2320 2457 Star
2320 2435 Star
2351 4186 Star
2351 3595 Star
2351 2413 Star
2351 2392 Star
2382 4186 Star
2382 3573 Star
2382 2370 Star
2382 2348 Star
2412 4164 Star
2412 3552 Star
2412 2326 Star
2412 2304 Star
2443 4164 Star
2443 3530 Star
2443 2282 Star
2443 2260 Star
2474 4142 Star
2474 3508 Star
2474 2238 Star
2474 2217 Star
2504 4142 Star
2504 3486 Star
2504 2195 Star
2504 2173 Star
2535 4121 Star
2535 3464 Star
2535 2151 Star
2535 2129 Star
2566 4121 Star
2566 3442 Star
2566 2107 Star
2566 2085 Star
2597 4099 Star
2597 3420 Star
2597 2063 Star
2597 2041 Star
2627 4099 Star
2627 3398 Star
2627 2020 Star
2627 1998 Star
2658 4077 Star
2658 3376 Star
2658 1976 Star
2658 1954 Star
2689 4077 Star
2689 3355 Star
2689 1932 Star
2689 1910 Star
2720 4055 Star
2720 3333 Star
2720 1888 Star
2720 1866 Star
2750 4055 Star
2750 3311 Star
2750 1844 Star
2750 1823 Star
2781 4033 Star
2781 3289 Star
2781 1801 Star
2781 1779 Star
2812 4033 Star
2812 3267 Star
2812 1757 Star
2812 1735 Star
2843 4011 Star
2843 3245 Star
2843 1713 Star
2843 1691 Star
2873 4011 Star
2873 3223 Star
2873 1669 Star
2873 1647 Star
2904 3989 Star
2904 3201 Star
2904 1626 Star
2904 1604 Star
2935 3989 Star
2935 3179 Star
2935 1582 Star
2935 1560 Star
2966 3967 Star
2966 3158 Star
2966 1538 Star
2966 1516 Star
2996 3967 Star
2996 3136 Star
2996 1494 Star
2996 1472 Star
3027 3945 Star
3027 3114 Star
3027 1451 Star
3027 1429 Star
3058 3945 Star
3058 3092 Star
3058 1407 Star
3058 1385 Star
3089 3924 Star
3089 3070 Star
3089 1363 Star
3089 1341 Star
3119 3924 Star
3119 3048 Star
3119 1319 Star
3119 1297 Star
3150 3902 Star
3150 3026 Star
3150 1275 Star
3150 1254 Star
3181 3902 Star
3181 3004 Star
3181 1232 Star
3181 1210 Star
3212 3880 Star
3212 2982 Star
3212 1188 Star
3212 1166 Star
3242 3880 Star
3242 2961 Star
3242 1144 Star
3242 1122 Star
3273 3858 Star
3273 2939 Star
3273 1100 Star
3273 1078 Star
3304 3858 Star
3304 2917 Star
3304 1057 Star
3304 1035 Star
3334 3836 Star
3334 2895 Star
3334 1013 Star
3334 991 Star
3365 3836 Star
3365 2873 Star
3365 969 Star
3365 947 Star
3396 3814 Star
3396 2851 Star
3396 925 Star
3396 903 Star
3427 3814 Star
3427 2829 Star
3427 881 Star
3427 860 Star
3457 3792 Star
3457 2807 Star
3457 838 Star
3457 816 Star
3488 3792 Star
3488 2786 Star
3488 794 Star
3488 772 Star
3519 3770 Star
3519 2764 Star
3519 750 Star
3519 728 Star
3550 3770 Star
3550 2742 Star
3550 706 Star
3550 685 Star
3580 3748 Star
3580 2720 Star
3580 663 Star
3580 641 Star
3611 3748 Star
3611 2698 Star
3611 619 Star
3611 597 Star
3642 3727 Star
3642 2676 Star
3642 575 Star
3642 553 Star
3673 3727 Star
3673 2654 Star
3673 531 Star
3673 509 Star
3703 3705 Star
3703 2632 Star
3703 488 Star
3703 466 Star
3734 3705 Star
3734 2610 Star
3734 444 Star
3734 422 Star
3765 3683 Star
3765 2589 Star
3796 3683 Star
3796 2567 Star
3826 3661 Star
3826 2545 Star
3857 3661 Star
3857 2523 Star
3888 3639 Star
3888 2501 Star
3919 3639 Star
3919 2479 Star
3949 3617 Star
3949 2457 Star
3980 3617 Star
3980 2435 Star
4011 3595 Star
4011 2413 Star
4042 3595 Star
4042 2392 Star
4072 3573 Star
4072 2370 Star
4103 3573 Star
4103 2348 Star
4134 3552 Star
4134 2326 Star
4165 3552 Star
4165 2304 Star
4195 3530 Star
4195 2282 Star
4226 3530 Star
4226 2260 Star
4257 3508 Star
4257 2238 Star
4287 3508 Star
4287 2217 Star
4318 3486 Star
4318 2195 Star
4349 3486 Star
4349 2173 Star
4380 3464 Star
4380 2151 Star
4410 3464 Star
4410 2129 Star
4441 3442 Star
4441 2107 Star
4472 3442 Star
4472 2085 Star
4503 3420 Star
4503 2063 Star
4533 3420 Star
4533 2041 Star
4564 3398 Star
4564 2020 Star
4595 3398 Star
4595 1998 Star
4626 3376 Star
4626 1976 Star
4656 3376 Star
4656 1954 Star
4687 3355 Star
4687 1932 Star
4718 3355 Star
4718 1910 Star
4749 3333 Star
4749 1888 Star
4779 3333 Star
4779 1866 Star
4810 3311 Star
4810 1844 Star
4841 3311 Star
4841 1823 Star
4872 3289 Star
4872 1801 Star
4902 3289 Star
4902 1779 Star
4933 3267 Star
4933 1757 Star
4964 3267 Star
4964 1735 Star
4995 3245 Star
4995 1713 Star
5025 3245 Star
5025 1691 Star
5056 3223 Star
5056 1669 Star
5087 3223 Star
5087 1647 Star
5117 3201 Star
5117 1626 Star
5148 3201 Star
5148 1604 Star
5179 3179 Star
5179 1582 Star
5210 3179 Star
5210 1560 Star
5240 3158 Star
5240 1538 Star
5271 3158 Star
5271 1516 Star
5302 3136 Star
5302 1494 Star
5333 3136 Star
5333 1472 Star
5363 3114 Star
5363 1451 Star
5394 3114 Star
5394 1429 Star
5425 3092 Star
5425 1407 Star
5456 3092 Star
5456 1385 Star
5486 3070 Star
5486 1363 Star
5517 3070 Star
5517 1341 Star
5548 3048 Star
5548 1319 Star
5579 3048 Star
5579 1297 Star
5609 3026 Star
5609 1275 Star
5640 3026 Star
5640 1254 Star
5671 3004 Star
5671 1232 Star
5702 3004 Star
5702 1210 Star
5732 2982 Star
5732 1188 Star
5763 2982 Star
5763 1166 Star
5794 2961 Star
5794 1144 Star
5825 2961 Star
5825 1122 Star
5855 2939 Star
5855 1100 Star
5886 2939 Star
5886 1078 Star
5917 2917 Star
5917 1057 Star
5948 2917 Star
5948 1035 Star
5978 2895 Star
5978 1013 Star
6009 2895 Star
6009 991 Star
6040 2873 Star
6040 969 Star
6070 2873 Star
6070 947 Star
6101 2851 Star
6101 925 Star
6132 2851 Star
6132 903 Star
6163 2829 Star
6163 881 Star
6193 2829 Star
6193 860 Star
6224 2807 Star
6224 838 Star
6255 2807 Star
6255 816 Star
6286 2786 Star
6286 794 Star
6316 2786 Star
6316 772 Star
6347 2764 Star
6347 750 Star
6378 2764 Star
6378 728 Star
6409 2742 Star
6409 706 Star
6439 2742 Star
6439 685 Star
6470 2720 Star
6470 663 Star
6501 2720 Star
6501 641 Star
6532 2698 Star
6532 619 Star
6562 2698 Star
6562 597 Star
6593 2676 Star
6593 575 Star
6624 2676 Star
6624 553 Star
6655 2654 Star
6655 531 Star
6685 2654 Star
6685 509 Star
6716 2632 Star
6716 488 Star
6747 2632 Star
6747 466 Star
6778 2610 Star
6778 444 Star
6808 2610 Star
6808 422 Star
% End plot #1
1.000 UP
0.500 UL
LTb
grestore % colour palette end
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
